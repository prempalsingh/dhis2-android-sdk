apply plugin: "com.android.library"
apply from: rootProject.file("plugins/android-checkstyle.gradle")
apply from: rootProject.file("plugins/android-findbugs.gradle")
apply from: rootProject.file("plugins/android-dexcount.gradle")
apply from: rootProject.file("plugins/android-pmd.gradle")
apply from: rootProject.file("plugins/errorprone.gradle")

def configuration = rootProject.ext.configuration
def libraries = rootProject.ext.libraries

android {
    compileSdkVersion configuration.targetSdkVersion
    buildToolsVersion configuration.buildToolsVersion

    defaultConfig {
        minSdkVersion configuration.minSdkVersion
        targetSdkVersion configuration.targetSdkVersion
        versionCode configuration.versionCode
        versionName configuration.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        // excluding duplicate license files
        // from jackson modules
        exclude "META-INF/LICENSE"

        // should be removed with interoperability library
        exclude "META-INF/rxjava.properties"
    }

    lintOptions {
        // casting 'InvalidPackage' error to warning
        warning "InvalidPackage"

        // Fail early.
        abortOnError true
    }
}

dependencies {
    compile project(":core-rules")

    compile "com.android.support:support-annotations:${libraries.support}"
    compile "com.squareup.duktape:duktape-android:${libraries.duktape}"

    androidTestCompile "com.android.support.test:runner:${libraries.testrunner}"
    androidTestCompile("com.google.truth:truth:${libraries.truth}") {
        exclude group: "junit" // Android has JUnit built in.
    }
}

apply from: rootProject.file("plugins/gradle-mvn-push.gradle")
